// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// enum   {
//   KIDS
//   GENERAL
//   ADULT
// }

model coursePackage {
  id                  String                @id @default(uuid())
  name                String                @db.Text
  description         String?               @db.Text
  courses             course[]
  questions           question[]
  finalExamResult     finalExamResult[]
  examDurationMinutes Int?
  isPublished         Boolean               @default(false)
  students            wpos_wpdatatable_23[] @relation("PackageHistory")
  activeStudents      wpos_wpdatatable_23[] @relation("ActivePackage")
  subjectPackages     subjectPackage[] // <-- Add this line for the relation
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
}

model subjectPackage {
  id          String        @id @default(uuid())
  kidpackage  Boolean?      @default(false)
  packageType String?
  subject     String?
  package     coursePackage @relation(fields: [packageId], references: [id], onDelete: Cascade)
  packageId   String
  createdAt   DateTime      @default(now())
  // @@unique([subject, packageId])
}

model course {
  id          String        @id @default(uuid())
  title       String        @db.Text
  description String?       @db.Text
  imageUrl    String?       @db.Text
  isPublished Boolean       @default(false)
  order       Int // Determines sequence in package
  packageId   String
  package     coursePackage @relation(fields: [packageId], references: [id], onDelete: Cascade)

  timeLimit Int?
  timeUnit  String?

  chapters  chapter[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([packageId])
}

model chapter {
  id          String  @id @default(uuid())
  title       String
  description String? @db.Text
  videoUrl    String? @db.Text
  position    Int
  isPublished Boolean @default(false)
  // isFree      Boolean @default(false)

  questions question[]

  courseId String
  course   course @relation(fields: [courseId], references: [id], onDelete: Cascade)

  studentProgress studentProgress[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([courseId])
}

model question {
  id              String           @id @default(cuid())
  chapter         chapter?         @relation(fields: [chapterId], references: [id], onDelete: Cascade)
  chapterId       String?
  coursePackage   coursePackage?   @relation(fields: [packageId], references: [id], onDelete: Cascade)
  packageId       String?
  question        String
  questionOptions questionOption[]
  questionAnswer  questionAnswer[]
  studentQuiz     studentQuiz[]
}

model questionOption {
  id                 String              @id @default(cuid())
  question           question            @relation(fields: [questionId], references: [id], onDelete: Cascade)
  questionId         String
  option             String
  questionAnswer     questionAnswer[]
  studentQuizAnswers studentQuizAnswer[]

  @@index([questionId])
}

model questionAnswer {
  id         String         @id @default(cuid())
  question   question       @relation(fields: [questionId], references: [id], onDelete: Cascade)
  questionId String
  answer     questionOption @relation(fields: [answerId], references: [id], onDelete: Cascade)
  answerId   String

  @@index([answerId])
  @@index([questionId])
}

model studentQuiz {
  id                 String              @id @default(cuid())
  student            wpos_wpdatatable_23 @relation(fields: [studentId], references: [wdt_ID], onDelete: Cascade)
  studentId          Int
  question           question            @relation(fields: [questionId], references: [id], onDelete: Cascade)
  questionId         String
  isFinalExam        Boolean             @default(false)
  takenAt            DateTime            @default(now())
  studentQuizAnswers studentQuizAnswer[]

  @@unique([studentId, questionId])
  @@index([questionId])
  @@index([studentId])
}

model studentQuizAnswer {
  id               String         @id @default(cuid())
  studentQuiz      studentQuiz    @relation(fields: [studentQuizId], references: [id], onDelete: Cascade)
  studentQuizId    String
  selectedOption   questionOption @relation(fields: [selectedOptionId], references: [id], onDelete: Cascade)
  selectedOptionId String

  @@unique([studentQuizId, selectedOptionId])
  @@index([selectedOptionId])
  @@index([studentQuizId])
}

model studentProgress {
  id          String              @id @default(cuid())
  student     wpos_wpdatatable_23 @relation(fields: [studentId], references: [wdt_ID], onDelete: Cascade)
  studentId   Int
  chapter     chapter             @relation(fields: [chapterId], references: [id], onDelete: Cascade)
  chapterId   String
  isStarted   Boolean             @default(true)
  isCompleted Boolean             @default(false)
  completedAt DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([studentId, chapterId])
  @@index([chapterId])
  @@index([studentId])
}

model finalExamResult {
  id                           String              @id @default(cuid())
  student                      wpos_wpdatatable_23 @relation(fields: [studentId], references: [wdt_ID])
  studentId                    Int
  coursePackage                coursePackage       @relation(fields: [packageId], references: [id])
  packageId                    String
  updationProhibited           Boolean             @default(false)
  result                       String?
  certificateUrl               String?
  dateOfDownloadingCertificate DateTime?
  startingTime                 DateTime            @default(now())
  endingTime                   DateTime?
}

model admin {
  id        String   @id @default(cuid())
  name      String
  phoneno   String   @unique
  chat_id   String   @unique
  passcode  String
  createdAt DateTime @default(now())
}

model wpos_wpdatatable_23 {
  wdt_ID          Int               @id @default(autoincrement())
  name            String?
  passcode        String?           @unique
  phoneno         String?           @unique
  country         String?
  status          String?
  isKid           Boolean?          @default(false)
  // History of all packages (many-to-many)
  packages        coursePackage[]   @relation("PackageHistory")
  // Active package (one-to-one or many-to-one)
  subject         String?
  package         String?
  youtubeSubject  String?
  activePackage   coursePackage?    @relation("ActivePackage", fields: [youtubeSubject], references: [id])
  progress        studentProgress[]
  studentQuizzes  studentQuiz[]
  finalExamResult finalExamResult[]
  chat_id         String?           @default("")
}
